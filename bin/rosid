#!/usr/bin/env node

'use strict'

let path    = require('path')
let program = require('commander')
let pkg     = require('./../package')

const getRosid = function() {

	let routesPath = path.resolve(process.cwd(), './rosidfile')

	let Rosid  = require('./../index')
	let routes = require(routesPath)

	return Rosid(routes)

}

const collect = function(value, list) {

	return [
		...list,
		...value.split(',')
	]

}

program
	.command('serve [srcPath]')
	.description('serve current or specified folder')
	.action((srcPath, opts) => {

		srcPath = path.resolve(process.cwd(), srcPath || '')

		getRosid().serve(srcPath, opts)

	})

program
	.command('compile [srcPath] <distPath>')
	.description('compile current or specified folder to static files')
	.option('-c, --copy <filePath>', 'include or exclude files from the copy-task', collect, [])
	.action((srcPath, distPath, opts) => {

		if (opts.copy.length===1 && opts.copy[0]==='false') opts.copy = false

		srcPath  = path.resolve(process.cwd(), srcPath || '')
		distPath = path.resolve(process.cwd(), distPath)

		getRosid().compile(srcPath, distPath, opts)

	})

program
	.version(pkg.version)
	.parse(process.argv)

if (program.args.length<1) program.help()